{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Contact.js","services/ContactService.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Contact","contact","deleteContact","name","number","onClick","window","confirm","baseUrl","Persons","persons","personsToShow","handleDeleteContact","handleNotifcation","id","axios","delete","then","response","data","ContactService","filter","person","message","isSuccess","catch","error","map","Notification","notification","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setNewNotification","notificationObject","setTimeout","useEffect","get","initialContacts","toLowerCase","includes","event","target","preventDefault","duplicate","find","p","changedContact","updatedContact","put","newObject","personObject","post","newContact","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6df1d4a3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n  return (\n    <div>\n        filter shown with{' '}  \n          <input\n            value={newFilter}\n            onChange={handleFilterChange}\n          />\n      </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n\n    return (\n        <form onSubmit={addPerson}>\n        <div>\n          name:{' '}  \n            <input\n              value={newName}\n              onChange={handleNameChange}\n            />\n        </div>\n        <div>number:{' '}   \n            <input\n              value={newNumber}\n              onChange={handleNumberChange}\n            />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Contact = ({contact, deleteContact}) => {\n  \n  const confirmDeletion = () => {  \n    if (window.confirm(`Delete ${contact.name} ?`)) {\n      deleteContact(contact);\n    } \n  }\n  return (\n    <div>\n      {contact.name} {contact.number}\n      <button onClick={() => {confirmDeletion()}}>delete</button>\n    </div>\n  )\n}\n\nexport default Contact","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n  \nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updatedContact) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedContact)\n    return request.then(response => response.data)\n}\n\nexport { getAll, create, deleteContact, update }\n","import React from \"react\";\nimport Contact from './Contact'\nimport * as ContactService from \"../services/ContactService\";\n\n\nconst Persons = ({persons, personsToShow, handleDeleteContact, handleNotifcation}) => {\n\n    const deleteContact = ({id, name}) => {\n                \n        ContactService.deleteContact(id)\n        .then(() => {\n            handleDeleteContact(persons.filter(person => person.id !== id))\n            handleNotifcation({\n                message: `Removed ${name} from the server`,\n                isSuccess: true\n            })\n        })\n        .catch(error => {\n            handleNotifcation({\n                message: `Information of ${name} has already been removed from the server`,\n                isSuccess: false\n            })\n            handleDeleteContact(persons.filter(person => person.id !== id))\n        })\n    }\n    return (\n        <>\n        {personsToShow.map(person => \n            <Contact key={person.name} contact={person} deleteContact={deleteContact}/>\n        )}\n      </>\n    )\n}\n\nexport default Persons\n\n","const Notification = ({ notification }) => {\n    if (notification.message === null) {\n      return null\n    }\n  \n    if (notification.isSuccess) {\n        return (\n            <div className=\"success\">\n              {notification.message}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"error\">\n              {notification.message}\n            </div>\n        )\n    }\n    \n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport * as ContactService from './services/ContactService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNewNotification ] = useState({message: null, isSuccess:null})\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeleteContact = (persons) => {\n    setPersons(persons)\n  }\n\n  const handleNotifcation = (notificationObject) => {\n    setNewNotification(notificationObject)\n    setTimeout(() => {\n      setNewNotification({\n        message   : null,\n        isSuccess : null\n      })\n    }, 5000)\n  }\n\n  useEffect(() => {\n    ContactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const duplicate = persons.find((p)=> p.name === newName)\n    const changedContact = { ...duplicate, number: newNumber }\n\n    if (duplicate) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old one with a new one?`)) {\n        ContactService\n        .update(duplicate.id, changedContact)\n        .then(updatedContact => {\n          setPersons(persons.map(person => person.id !== duplicate.id ? person : updatedContact))\n          setNewName('')\n          setNewNumber('')\n          handleNotifcation({\n            message   : `Updated ${updatedContact.name}'s contact info in the server`,\n            isSuccess : true\n          })\n        })\n        .catch(error => {\n          handleNotifcation({\n              message: `Information of ${changedContact.name} has already been removed from the server`,\n              isSuccess: false\n          })\n          handleDeleteContact(persons.filter(person => person.id !== changedContact.id))\n        })\n      } \n      return;\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    ContactService\n    .create(personObject)\n    .then(newContact => {\n      setPersons(persons.concat(newContact))\n      setNewName('')\n      setNewNumber('')\n      handleNotifcation({\n        message   : `Added ${personObject.name}`,\n        isSuccess : true\n      })\n    })\n    \n  }\n\n  const personsToShow = newFilter ? persons.filter((person)=> person.name.toLowerCase().includes(newFilter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter \n        newFilter={newFilter} \n        handleFilterChange={handleFilterChange}\n      />\n      <h3>add a new</h3>\n      <PersonForm \n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson} \n        handleNameChange={handleNameChange}   \n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        persons={persons}\n        personsToShow={personsToShow} \n        handleDeleteContact={handleDeleteContact}\n        handleNotifcation={handleNotifcation}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}